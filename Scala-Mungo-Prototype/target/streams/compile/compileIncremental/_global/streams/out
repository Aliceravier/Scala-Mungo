[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set()
[debug] 	added: Set(C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\exampleProtocols\MoneyStashProtocol.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\testProtocols\walkTrueCaseProtocol.scala)
[debug] 	modified: Set(C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\GetFileFromAnnotation.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Animals.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Util.scala)
[debug] Invalidated products: Set(C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Cat.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Util.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$16.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Typestate.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$12.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$Function$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$13.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$10.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$6.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$7.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Demonstration$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$24.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$5.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$11.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$21.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$ClassOrObject$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$ClassOrObject.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$LoopType$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$3.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$2.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$functionTraverser$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$classAndObjectTraverser$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Util$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$17.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\ProtocolDSL\CatProtocol.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$22.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$29.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$9.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\Demonstration.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$4.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$functionTraverser$$anon$28.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\ProtocolDSL\CatProtocol$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$23.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$15.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$classAndObjectTraverser$$anon$26.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$14.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\ProtocolDSL\CatProtocol$delayedInit$body.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$20.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\GetFileFromAnnotation.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$Function.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$19.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$8.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$methodTraverser$.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$18.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$$anon$1.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$classAndObjectTraverser$$anon$27.class, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes\compilerPlugin\MyComponent$GetFileFromAnnotationPhase$methodTraverser$$anon$25.class)
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set(compilerPlugin.Demonstration, compilerPlugin.GetFileFromAnnotation, compilerPlugin.MyComponent.ClassOrObject, compilerPlugin.Cat, compilerPlugin.MyComponent.Function, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.functionTraverser, compilerPlugin.Typestate, compilerPlugin.MyComponent.GetFileFromAnnotationPhase, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.classAndObjectTraverser, compilerPlugin.Util, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.methodTraverser, compilerPlugin.MyComponent, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.LoopType)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set(C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\ProtocolDSL\CatProtocol.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Util.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Animals.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\GetFileFromAnnotation.scala)
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set(compilerPlugin.Demonstration, compilerPlugin.GetFileFromAnnotation, compilerPlugin.MyComponent.ClassOrObject, compilerPlugin.Cat, compilerPlugin.MyComponent.Function, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.functionTraverser, compilerPlugin.Typestate, compilerPlugin.MyComponent.GetFileFromAnnotationPhase, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.classAndObjectTraverser, compilerPlugin.Util, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.methodTraverser, compilerPlugin.MyComponent, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.LoopType)
[debug] All initially invalidated sources:Set(C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\exampleProtocols\MoneyStashProtocol.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\ProtocolDSL\CatProtocol.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Util.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\Animals.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\testProtocols\walkTrueCaseProtocol.scala, C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\src\main\scala\compilerPlugin\GetFileFromAnnotation.scala)
[debug] Initial set of included nodes: compilerPlugin.Demonstration, compilerPlugin.GetFileFromAnnotation, compilerPlugin.MyComponent.ClassOrObject, compilerPlugin.Cat, compilerPlugin.MyComponent.Function, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.functionTraverser, compilerPlugin.Typestate, compilerPlugin.MyComponent.GetFileFromAnnotationPhase, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.classAndObjectTraverser, compilerPlugin.Util, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.methodTraverser, compilerPlugin.MyComponent, compilerPlugin.MyComponent.GetFileFromAnnotationPhase.LoopType
[info] Compiling 6 Scala sources to C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.3
[debug] [zinc] Running cached compiler 7b331769 for Scala compiler version 2.13.3
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-bootclasspath
[debug] 	C:\Program Files\Java\jdk1.8.0_60\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_60\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_60\jre\classes;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.3\scala-library-2.13.3.jar
[debug] 	-classpath
[debug] 	C:\Year five\Project\Scala-Mungo\Scala-Mungo-Prototype\target\scala-2.13\classes;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.3\scala-reflect-2.13.3.jar;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-compiler\2.13.3\scala-compiler-2.13.3.jar;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-parser-combinators_2.13\1.1.2\scala-parser-combinators_2.13-1.1.2.jar;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\jline\jline\3.15.0\jline-3.15.0.jar;C:\Users\Alice\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\net\java\dev\jna\jna\5.3.1\jna-5.3.1.jar
[debug] Scala compilation took 38.6379151 s
[info] Done compiling.
[debug] Invalidating (transitively) by inheritance from compilerPlugin.Demonstration...
[debug] Initial set of included nodes: compilerPlugin.Demonstration
[debug] Invalidated by transitive inheritance dependency: Set(compilerPlugin.Demonstration)
[debug] Change NamesChange(compilerPlugin.Demonstration,ModifiedNames(changes = UsedName(executionStart,[Default]), UsedName($init$,[Default]), UsedName(stash,[Default]), UsedName(Demonstration,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(args,[Default]), UsedName(sameStash,[Default]))) invalidates 1 classes due to The compilerPlugin.Demonstration has the following regular definitions changed:
[debug] 	UsedName(executionStart,[Default]), UsedName($init$,[Default]), UsedName(stash,[Default]), UsedName(Demonstration,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(args,[Default]), UsedName(sameStash,[Default]).
[debug] 	> by transitive inheritance: Set(compilerPlugin.Demonstration)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from testProtocols.walkTrueCaseProtocol...
[debug] Initial set of included nodes: testProtocols.walkTrueCaseProtocol
[debug] Invalidated by transitive inheritance dependency: Set(testProtocols.walkTrueCaseProtocol)
[debug] Change NamesChange(testProtocols.walkTrueCaseProtocol,ModifiedNames(changes = UsedName(checkStateNameIsValid,[Default]), UsedName(stateIndexCounter,[Default]), UsedName(executionStart,[Default]), UsedName(statesMap,[Default]), UsedName(returnValues,[Default]), UsedName(Undefined,[Default]), UsedName(states,[Default]), UsedName(Any,[Default]), UsedName(Goto,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(checkWholeProtocolIsWellFormed,[Default]), UsedName(currentMethod,[Default]), UsedName(ended,[Default]), UsedName(checkProtocolHasNotBeenEnded,[Default]), UsedName($init$,[Default]), UsedName(Or,[Default]), UsedName(toString,[Default]), UsedName(transitions,[Default]), UsedName(currentState,[Default]), UsedName(printNicely,[Default]), UsedName(synchronized,[Default]), UsedName(stateMachine,[Default]), UsedName(checkMethodSignatureIsValid,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(checkReturnValueIsValid,[Default]), UsedName(hashCode,[Default]), UsedName(checkMethodIsOnlyDefinedOnceForTheCurrentState,[Default]), UsedName(##,[Default]), UsedName(checkCurrentStateIsDefined,[Default]), UsedName(methods,[Default]), UsedName(checkForDuplicateState,[Default]), UsedName(At,[Default]), UsedName(getOrCreateMethod,[Default]), UsedName(clone,[Default]), UsedName(end,[Default]), UsedName(ne,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(args,[Default]), UsedName(when,[Default]), UsedName(getOrCreateReturnValue,[Default]), UsedName(getClass,[Default]), UsedName(In,[Default]), UsedName(returnValueIndexCounter,[Default]), UsedName(createNewState,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(in,[Default]), UsedName(walkTrueCaseProtocol,[Default]), UsedName(createStateMachine,[Default]), UsedName(wait,[Default]), UsedName(sortSet,[Default]))) invalidates 1 classes due to The testProtocols.walkTrueCaseProtocol has the following regular definitions changed:
[debug] 	UsedName(checkStateNameIsValid,[Default]), UsedName(stateIndexCounter,[Default]), UsedName(executionStart,[Default]), UsedName(statesMap,[Default]), UsedName(returnValues,[Default]), UsedName(Undefined,[Default]), UsedName(states,[Default]), UsedName(Any,[Default]), UsedName(Goto,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(checkWholeProtocolIsWellFormed,[Default]), UsedName(currentMethod,[Default]), UsedName(ended,[Default]), UsedName(checkProtocolHasNotBeenEnded,[Default]), UsedName($init$,[Default]), UsedName(Or,[Default]), UsedName(toString,[Default]), UsedName(transitions,[Default]), UsedName(currentState,[Default]), UsedName(printNicely,[Default]), UsedName(synchronized,[Default]), UsedName(stateMachine,[Default]), UsedName(checkMethodSignatureIsValid,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(checkReturnValueIsValid,[Default]), UsedName(hashCode,[Default]), UsedName(checkMethodIsOnlyDefinedOnceForTheCurrentState,[Default]), UsedName(##,[Default]), UsedName(checkCurrentStateIsDefined,[Default]), UsedName(methods,[Default]), UsedName(checkForDuplicateState,[Default]), UsedName(At,[Default]), UsedName(getOrCreateMethod,[Default]), UsedName(clone,[Default]), UsedName(end,[Default]), UsedName(ne,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(args,[Default]), UsedName(when,[Default]), UsedName(getOrCreateReturnValue,[Default]), UsedName(getClass,[Default]), UsedName(In,[Default]), UsedName(returnValueIndexCounter,[Default]), UsedName(createNewState,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(in,[Default]), UsedName(walkTrueCaseProtocol,[Default]), UsedName(createStateMachine,[Default]), UsedName(wait,[Default]), UsedName(sortSet,[Default]).
[debug] 	> by transitive inheritance: Set(testProtocols.walkTrueCaseProtocol)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from compilerPlugin.MoneyStash...
[debug] Initial set of included nodes: compilerPlugin.MoneyStash
[debug] Invalidated by transitive inheritance dependency: Set(compilerPlugin.MoneyStash)
[debug] Change NamesChange(compilerPlugin.MoneyStash,ModifiedNames(changes = UsedName(MoneyStash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(amountOfMoney,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(compilerPlugin;MoneyStash;init;,[Default]), UsedName(getClass,[Default]), UsedName(fill,[Default]), UsedName(get,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The compilerPlugin.MoneyStash has the following regular definitions changed:
[debug] 	UsedName(MoneyStash,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(amountOfMoney,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(compilerPlugin;MoneyStash;init;,[Default]), UsedName(getClass,[Default]), UsedName(fill,[Default]), UsedName(get,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]).
[debug] 	> by transitive inheritance: Set(compilerPlugin.MoneyStash)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from exampleProtocols.MoneyStashProtocol...
[debug] Initial set of included nodes: exampleProtocols.MoneyStashProtocol
[debug] Invalidated by transitive inheritance dependency: Set(exampleProtocols.MoneyStashProtocol)
[debug] Change NamesChange(exampleProtocols.MoneyStashProtocol,ModifiedNames(changes = UsedName(checkStateNameIsValid,[Default]), UsedName(stateIndexCounter,[Default]), UsedName(executionStart,[Default]), UsedName(statesMap,[Default]), UsedName(returnValues,[Default]), UsedName(Undefined,[Default]), UsedName(states,[Default]), UsedName(Any,[Default]), UsedName(Goto,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(checkWholeProtocolIsWellFormed,[Default]), UsedName(currentMethod,[Default]), UsedName(ended,[Default]), UsedName(checkProtocolHasNotBeenEnded,[Default]), UsedName($init$,[Default]), UsedName(Or,[Default]), UsedName(toString,[Default]), UsedName(transitions,[Default]), UsedName(currentState,[Default]), UsedName(printNicely,[Default]), UsedName(synchronized,[Default]), UsedName(stateMachine,[Default]), UsedName(checkMethodSignatureIsValid,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(checkReturnValueIsValid,[Default]), UsedName(hashCode,[Default]), UsedName(checkMethodIsOnlyDefinedOnceForTheCurrentState,[Default]), UsedName(##,[Default]), UsedName(checkCurrentStateIsDefined,[Default]), UsedName(methods,[Default]), UsedName(checkForDuplicateState,[Default]), UsedName(At,[Default]), UsedName(MoneyStashProtocol,[Default]), UsedName(getOrCreateMethod,[Default]), UsedName(clone,[Default]), UsedName(end,[Default]), UsedName(ne,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(args,[Default]), UsedName(when,[Default]), UsedName(getOrCreateReturnValue,[Default]), UsedName(getClass,[Default]), UsedName(In,[Default]), UsedName(returnValueIndexCounter,[Default]), UsedName(createNewState,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(in,[Default]), UsedName(createStateMachine,[Default]), UsedName(wait,[Default]), UsedName(sortSet,[Default]))) invalidates 1 classes due to The exampleProtocols.MoneyStashProtocol has the following regular definitions changed:
[debug] 	UsedName(checkStateNameIsValid,[Default]), UsedName(stateIndexCounter,[Default]), UsedName(executionStart,[Default]), UsedName(statesMap,[Default]), UsedName(returnValues,[Default]), UsedName(Undefined,[Default]), UsedName(states,[Default]), UsedName(Any,[Default]), UsedName(Goto,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(checkWholeProtocolIsWellFormed,[Default]), UsedName(currentMethod,[Default]), UsedName(ended,[Default]), UsedName(checkProtocolHasNotBeenEnded,[Default]), UsedName($init$,[Default]), UsedName(Or,[Default]), UsedName(toString,[Default]), UsedName(transitions,[Default]), UsedName(currentState,[Default]), UsedName(printNicely,[Default]), UsedName(synchronized,[Default]), UsedName(stateMachine,[Default]), UsedName(checkMethodSignatureIsValid,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(checkReturnValueIsValid,[Default]), UsedName(hashCode,[Default]), UsedName(checkMethodIsOnlyDefinedOnceForTheCurrentState,[Default]), UsedName(##,[Default]), UsedName(checkCurrentStateIsDefined,[Default]), UsedName(methods,[Default]), UsedName(checkForDuplicateState,[Default]), UsedName(At,[Default]), UsedName(MoneyStashProtocol,[Default]), UsedName(getOrCreateMethod,[Default]), UsedName(clone,[Default]), UsedName(end,[Default]), UsedName(ne,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(args,[Default]), UsedName(when,[Default]), UsedName(getOrCreateReturnValue,[Default]), UsedName(getClass,[Default]), UsedName(In,[Default]), UsedName(returnValueIndexCounter,[Default]), UsedName(createNewState,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(in,[Default]), UsedName(createStateMachine,[Default]), UsedName(wait,[Default]), UsedName(sortSet,[Default]).
[debug] 	> by transitive inheritance: Set(exampleProtocols.MoneyStashProtocol)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from compilerPlugin.Cat...
[debug] Initial set of included nodes: compilerPlugin.Cat
[debug] Invalidated by transitive inheritance dependency: Set(compilerPlugin.Cat)
[debug] Change NamesChange(compilerPlugin.Cat,ModifiedNames(changes = UsedName(friend,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(number,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(setFriend,[Default]), UsedName(compilerPlugin;Cat;init;,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(walk,[Default]), UsedName(!=,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(Cat,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(walkWithFriend,[Default]))) invalidates 1 classes due to The compilerPlugin.Cat has the following regular definitions changed:
[debug] 	UsedName(friend,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(number,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(setFriend,[Default]), UsedName(compilerPlugin;Cat;init;,[Default]), UsedName(hashCode,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(walk,[Default]), UsedName(!=,[Default]), UsedName(getClass,[Default]), UsedName(name,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(Cat,[Default]), UsedName(asInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(walkWithFriend,[Default]).
[debug] 	> by transitive inheritance: Set(compilerPlugin.Cat)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] No classes were invalidated.
